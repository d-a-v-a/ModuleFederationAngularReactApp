type ManifestFile<T extends RemoteConfig = RemoteConfig> = {
    [key: string]: string | T;
};
type Manifest<T extends RemoteConfig = RemoteConfig> = {
    [key: string]: T;
};
type RemoteConfig = {
    type: 'module' | 'script';
    remoteEntry: string;
    [key: string]: unknown;
};
type LoadRemoteEntryOptions = LoadRemoteEntryScriptOptions | LoadRemoteEntryEsmOptions;
type LoadRemoteEntryScriptOptions = {
    type?: 'script';
    remoteEntry: string;
    remoteName: string;
};
type LoadRemoteEntryEsmOptions = {
    type: 'module';
    remoteEntry: string;
};
declare function loadRemoteEntry(remoteEntry: string, remoteName: string): Promise<void>;
declare function loadRemoteEntry(options: LoadRemoteEntryOptions): Promise<void>;
type LoadRemoteModuleOptions = LoadRemoteModuleScriptOptions | LoadRemoteModuleEsmOptions | LoadRemoteModuleManifestOptions;
type LoadRemoteModuleScriptOptions = {
    type?: 'script';
    remoteEntry?: string;
    remoteName: string;
    exposedModule: string;
};
type LoadRemoteModuleEsmOptions = {
    type: 'module';
    remoteEntry: string;
    exposedModule: string;
};
type LoadRemoteModuleManifestOptions = {
    type: 'manifest';
    remoteName: string;
    exposedModule: string;
};
declare function loadRemoteModule<T = any>(remoteName: string, exposedModule: string): Promise<T>;
declare function loadRemoteModule<T = any>(options: LoadRemoteModuleOptions): Promise<T>;
declare function setManifest(manifest: ManifestFile, skipRemoteEntries?: boolean): Promise<void>;
declare function getManifest<T extends Manifest>(): T;
declare function initFederation(manifest: string | ManifestFile, skipRemoteEntries?: boolean): Promise<void>;
declare function loadManifest(configFile: string, skipRemoteEntries?: boolean): Promise<void>;

export { getManifest, initFederation, loadManifest, loadRemoteEntry, loadRemoteModule, setManifest };
export type { LoadRemoteEntryEsmOptions, LoadRemoteEntryOptions, LoadRemoteEntryScriptOptions, LoadRemoteModuleEsmOptions, LoadRemoteModuleManifestOptions, LoadRemoteModuleOptions, LoadRemoteModuleScriptOptions, Manifest, ManifestFile, RemoteConfig };
